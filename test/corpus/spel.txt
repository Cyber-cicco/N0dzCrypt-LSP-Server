================================================================================
SPEL Literals
================================================================================

<div th:text="${1.1}"> </div>
<div th:text="${1.1f}"> </div>
<div th:text="${1}"> </div>
<div th:text="${'1'}"> </div>
<div th:text="${true}"> </div>
<div th:text="${false}"> </div>
<div th:text="${null}"> </div>

--------------------------------------------------------------------------------
(document
  (element
    (start_tag 
      (tag_name)
      (th_attribute 
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (double_literal)))))
    (end_tag
      (tag_name)))
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (float_literal)))))
    (end_tag
      (tag_name)))
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (integer_literal)))))
    (end_tag
      (tag_name)))
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (spel_string_literal)))))
    (end_tag
      (tag_name)))
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value 
          (spel_th_std_expression
            (true_literal)))))
    (end_tag
      (tag_name)))
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (false_literal)))))
    (end_tag
      (tag_name)))
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (null_literal)))))
    (end_tag
      (tag_name))))

================================================================================
SPEL Inline list
================================================================================

<div th:text="${{1,3,43,9}}"> </div>
<div th:text="${{}}"> </div>

--------------------------------------------------------------------------------
(document
  (element 
    (start_tag 
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (inline_list
              (integer_literal)
              (integer_literal)
              (integer_literal)
              (integer_literal))))))
    (end_tag
      (tag_name)))
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (inline_list)))))
    (end_tag
      (tag_name))))

================================================================================
SPEL Inline map
================================================================================

<div th:text="${{test_1: 1, test_2 : 34}['test_1']}"> </div>
<div th:text="${{:}}"> </div>

--------------------------------------------------------------------------------
(document
  (element 
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (inline_map
              key: (spel_object_expression)
              value: (integer_literal)
              key: (spel_object_expression)
              value: (integer_literal)
              (spel_property_access
                name: (spel_string_literal)))))))
    (end_tag
      (tag_name)))
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (inline_map)))))
    (end_tag
      (tag_name))))

================================================================================
SPEL Object expression
================================================================================

<div th:text="${bonjour['test'].boulgour.test(1+2, 'test')}"> </div>

--------------------------------------------------------------------------------
(document
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (spel_object_expression
              (spel_property_access
                name: (spel_string_literal)
                (spel_property_access
                  name: (spel_property_name)
                  (spel_method_access
                    (spel_method_expression
                      name: (spel_method_name)
                      args: (spel_method_args
                        (binary_spel_expression
                          left: (integer_literal)
                          operator: (add)
                          right: (integer_literal))
                        (spel_string_literal)))))))))))
    (end_tag
      (tag_name))))

================================================================================
SPEL Method expression
================================================================================

<div th:text="${test(1+2, 'test'[0])}"> </div>

--------------------------------------------------------------------------------
(document 
  (element 
    (start_tag 
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (spel_method_expression
              name: (spel_method_name)
              args: (spel_method_args
                (binary_spel_expression
                  left: (integer_literal)
                  operator: (add)
                  right: (integer_literal))
                (spel_string_literal
                  (spel_property_access
                    name: (integer_literal)))))))))
    (end_tag
      (tag_name))))

================================================================================
SPEL Variable reference
================================================================================

<div th:text="${#test.test}"> </div>

--------------------------------------------------------------------------------
(document
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (spel_varref
              name: (spel_varname)
              (spel_property_access
                name: (spel_property_name)))))))
    (end_tag
      (tag_name))))

================================================================================
SPEL Bean reference
================================================================================

<div th:text="${@test.test('test') + 'test'}"> </div>

--------------------------------------------------------------------------------
(document
  (element
    (start_tag 
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression 
            (binary_spel_expression
              left: (spel_bean_reference
                (spel_method_access
                  (spel_method_expression
                    name: (spel_method_name)
                    args: (spel_method_args
                      (spel_string_literal)))))
              operator: (add)
              right: (spel_string_literal))))))
    (end_tag
      (tag_name))))

================================================================================
SPEL Java reference
================================================================================

<div th:text="${T(java.lang.Integer).FLOOR < T(java.lang.Integer).CEIL}"> </div>

--------------------------------------------------------------------------------
(document
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (binary_spel_expression
              left: (java_ref
                (type)
                (spel_property_access
                  name: (spel_property_name)))
              operator: (lesser_than)
              right: (java_ref
                (type)
                (spel_property_access
                  name: (spel_property_name))))))))
    (end_tag
      (tag_name))))

================================================================================
SPEL Binary expression
================================================================================

<div th:text="${T(java.lang.Integer).FLOOR < T(java.lang.Integer).CEIL}"> </div>

--------------------------------------------------------------------------------
(document
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (binary_spel_expression
              left: (java_ref
                (type)
                (spel_property_access
                  name: (spel_property_name)))
              operator: (lesser_than)
              right: (java_ref
                (type)
                (spel_property_access
                  name: (spel_property_name))))))))
    (end_tag
      (tag_name))))


================================================================================
SPEL Unary expression
================================================================================

<div th:text="${-T(java.lang.Integer).FLOOR < !T(java.lang.Integer).CEIL}"> </div>

--------------------------------------------------------------------------------
(document
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (binary_spel_expression
              left: (unary_spel_expression
                operator: (minus)
                operand: (java_ref
                  (type)
                  (spel_property_access
                    name: (spel_property_name))))
              operator: (lesser_than)
              right: (unary_spel_expression
                operator: (not)
                operand: (java_ref
                  (type)
                  (spel_property_access
                    name: (spel_property_name)))))))))
    (end_tag
      (tag_name))))


================================================================================
SPEL Ternary expression
================================================================================

<div th:text="${true ? 'oui' : 'non' == 'non'}"> </div>

--------------------------------------------------------------------------------
(document
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (ternary_spel_expression
              condition: (true_literal)
              consequence: (spel_string_literal)
              alternative: (binary_spel_expression
                left: (spel_string_literal)
                operator: (equal)
                right: (spel_string_literal)))))))
    (end_tag
      (tag_name))))

================================================================================
SPEL Nested Ternary expression
================================================================================

<div th:text="${true ? false ? 'oui' : 'non' == 'non' : 'ptet ben'}"> </div>

--------------------------------------------------------------------------------
(document
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (ternary_spel_expression
              condition: (true_literal)
              consequence: (ternary_spel_expression
                condition: (false_literal)
                consequence: (spel_string_literal)
                alternative: (binary_spel_expression
                  left: (spel_string_literal)
                  operator: (equal)
                  right: (spel_string_literal)))
              alternative: (spel_string_literal))))))
    (end_tag
      (tag_name))))

================================================================================
SPEL Evlis expression
================================================================================

<div th:text="${'test'?:'test'}"> </div>

--------------------------------------------------------------------------------
(document
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (elvis_expression
              condition: (spel_string_literal)
              alternative: (spel_string_literal))))))
    (end_tag
      (tag_name))))


================================================================================
SPEL Array Creation
================================================================================

<div th:text="${new float[][] {{2,2},{2,2}} }"> </div>

--------------------------------------------------------------------------------
(document
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (array_creation
              (floating_point_type)
              (array_creation_suffix)
              (array_creation_suffix)
              (array_content
                (inline_list
                  (integer_literal)
                  (integer_literal))
                (inline_list
                  (integer_literal)
                  (integer_literal))))))))
    (end_tag
      (tag_name))))


================================================================================
SPEL Array Creation
================================================================================

<div th:text="${new float[][] {{2,2},{2,2}} }"> </div>

--------------------------------------------------------------------------------
(document
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (array_creation
              (floating_point_type)
              (array_creation_suffix)
              (array_creation_suffix)
              (array_content
                (inline_list
                  (integer_literal)
                  (integer_literal))
                (inline_list
                  (integer_literal)
                  (integer_literal))))))))
    (end_tag
      (tag_name))))


================================================================================
SPEL Object Creation
================================================================================

<div th:text="${#test = new java.lang.String('test')}"> </div>

--------------------------------------------------------------------------------
(document
  (element
    (start_tag
      (tag_name)
      (th_attribute
        attribute_name: (th_generic)
        attribute_value: (th_attribute_value
          (spel_th_std_expression
            (spel_assignement_expression
              left: (spel_varref
                name: (spel_varname))
              right: (object_creation_expression
                (spel_class)
                (arguments
                  (spel_string_literal))))))))
    (end_tag
      (tag_name))))
